{{<layout.mustache}}
  {{$title}}PrimesUI{{/title}}
  {{$body}}
    <div class="jumbotron">
      <h1>
        <img src="{{ctx.base}}images/logo.png"/>
        <a href="https://github.com/dacr/primes-scalatra-app">PrimesUI</a>
      </h1>

      <p style="color:red">
        <i>
          Classic webapp / mysql release of primes ui web application, classical design,
          almost all operations are synchronous.
        </i>
      </p>

      <p>
        The database cache contains <b id="valuesCount">{{valuesCount}}</b> already checked values, with
        <b id="primesCount">{{primesCount}}</b> primes found.
        The highest found prime is
          {{#highestPrime}}
          <b id="lastPrime">{{highestPrime}}</b>.
          {{/highestPrime}}
          {{^highestPrime}}
          <b id="lastPrime" style="color:red">unknown</b>.
          {{/highestPrime}}
        The application cache is
          {{#useCache}}
            <span class="label label-success" id="cacheStatus">Enabled</span>
          {{/useCache}}
          {{^useCache}}
            <span class="label label-warning" id="cacheStatus">Disabled</span>
          {{/useCache}}

      </p>
    </div>

    <p align="right">
      <a href="https://github.com/dacr/primes-scalatra-app">PrimesUI</a>
      release <b><span id="primesui-version">{{version}}</span></b>
      ({{buildate}})
      <br/>
      <a href="https://github.com/dacr/primes">Primes library</a>
      release <b><span id="primes-version">{{pversion}}</span></b>
      <br/>
      {{#hitCount}}
        <i>Current user homepage hit count <span id="userhitcount">{{hitCount}}</span></i>
      {{/hitCount}}
    </p>

    <!-- ------------------------------------------------------------------------------------------- -->
    <ul class="nav nav-pills">
      <li class="active"><a data-toggle="tab" href="#features">Features</a></li>
      <li ><a data-toggle="tab" href="#experiments">Experiments</a></li>
      <li ><a data-toggle="tab" href="#admin">Admin</a></li>
    </ul>

    <div class="tab-content">

      <!-- ------------------------------------------------------------------------------------------- -->
      <div id="features" class="tab-pane fade in active">

        <ul class="list-group">
          <li class="list-group-item">
            <b><a href="{{ctx.base}}{{ctx.check}}">{{ctx.check}}/</a></b><code>$num</code>
            : Test if <code>$num</code> is a prime number or not
          </li>
          <li class="list-group-item">
            <b><a href="{{ctx.base}}{{ctx.prime}}">{{ctx.prime}}/</a></b><code>$nth</code>
            : Get the <code>$nth</code> prime
          </li>
          <li class="list-group-item">
            <b><a href="@factorsUrl">factors/</a></b><code>$num</code>
            : Get the prime factors of <code>$num</code>
          </li>
          <li class="list-group-item">
            <b><a href="@{primesUrl+"/1000"}">primes/</a></b><code>$below</code>
            : List primes lower than <code>$below</code>.
            List up to
            @for(n <-List(1,25,50,100)) { <a href="@{primesUrl+"/"+(n*1000)}">@{n}K</a> }
          </li>
          <li class="list-group-item">
            <b><a href="@{primesUrl+"/140/100"}">primes/</a></b><code>$below</code>/<code>above</code>
            : List primes which are lower than <code>$below</code> and greater than <code>$above</code>
          </li>
          <li class="list-group-item">
            <b><a href="@{populateUrl+"/25000"}">populate/</a></b><code>$upto</code>
            : Populate the database up to the specified value. It triggers a background thread.
            @for(n <-List(1,25,50,100,250,500)) { <a href="@{populateUrl+"/"+(n*1000)}">@{n}K</a> }
          </li>
          <li class="list-group-item">
            <b><a href="@{ulamUrl+"/128"}">ulam/</a></b><code>$size</code>
            : Dynamically draw an ulam spiral with the give <i>$size</i>.
            Take care of your CPUs and Heap, this is a server side computation.
            @for(n <-List(128,256,512,1024)) { <a href="@{ulamUrl+"/"+n}">@n</a> }
          </li>

        </ul>
      </div>
      <!-- ------------------------------------------------------------------------------------------- -->
      <div id="experiments" class="tab-pane fade">
        <ul class="list-group">
          <li class="list-group-item">
            <b><a href="@{issuecheckUrl}">issuecheck/</a></b><code>$num</code>
            : to test if <code>$num</code> is a prime number or not,
            a random issue has been chosen, find which one.
          </li>
          <li class="list-group-item">
            <b><a href="@{highcpucheckUrl}">highcpucheck/</a></b><code>$num</code>
            : to test if <code>$num</code> is a prime number or not,
            it is systematically computed, and as we want to get the rank, all values between
            1 and  <code>$num</code> are tested ! So it has a high impact on CPU (only
            one core is used). Here no memory or database cache is used.
          </li>
          <li class="list-group-item">
                    <b><a href="@{overcheckUrl}">overcheck/</a></b><code>$num</code>
                    : to test if <code>$num</code> is a prime number or not, the problem
                    here is that all already computed values will be loaded in memory just
                    to get <code>$num</code>.
                  </li>
          <li class="list-group-item">
            <b><a href="@{slowcheckUrl}">slowcheck/</a></b><code>$num</code>/<code>$delay</code>
            : to test if <code>$num</code> is a prime number or not,
            and wait <code>$delay</code> milliseconds at server side, default is 1 second.
            Time units can be specified : <code>1m5s100ms</code>.
          </li>
          <li class="list-group-item">
            <b><a href="@{slowsqlcheckUrl}">slowsqlcheck/</a></b><code>$num</code>/<code>$secs</code>
            : to test if <code>$num</code> is a prime number or not, and
            wait <code>$secs</code> seconds inside the database, default is 1 second,
            <b>second level cache feature is never used</b>.
          </li>
          <li class="list-group-item">
            <b><a href="@{toomanylogscheckUrl}">toomanylogscheck/</a></b><code>$num</code>
            : to test if <code>$num</code> is a prime number or not, with a lot of logs.
          </li>
          <li class="list-group-item">
            <b><a href="@{badlogscheckUrl}">badlogscheck/</a></b><code>$num</code>
            : to test if <code>$num</code> is a prime number or not, with bad logging.
          </li>
          <li class="list-group-item">
            <b><a href="@{goodlogscheckUrl}">goodlogscheck/</a></b><code>$num</code>
            : to test if <code>$num</code> is a prime number or not, with good logging.
          </li>
          <li class="list-group-item">
        <b><a href="@{leakedcheckUrl}">leakedcheck/</a></b><code>$num</code>/<code>$howmany</code>
        : to test if <code>$num</code> is a prime number or not, and
        leak <code>$howmany</code> bytes at server side, default is 60Kb.
        Size units can be specified : <code>1mb2kb3b</code>.
      </li>
          <li class="list-group-item">
        <b><a href="@{sessionleakedcheckUrl}">sessionleakedcheck/</a></b><code>$num</code>/<code>$howmany</code>
        : to test if <code>$num</code> is a prime number or not, and
        leak <code>$howmany</code> bytes inside current user session, default is 320Kb.
        Size units can be specified : <code>1mb2kb3b</code>.
      </li>
          <li class="list-group-item">
        <b><a href="@{jdbcleakcheckUrl}">jdbcleakcheck/</a></b><code>$num</code>
        : to test if <code>$num</code> is a prime number or not, and
        loose one jdbc connection.
      </li>
          <li class="list-group-item">
        <b><a href="@{bigUrl}">big/</a></b><code>$howmanyKB</code>
        : to test a response with an approximative size
        of <code>$howmany</code> kilobytes, default is 3Mb.
      </li>
    </ul>

      </div>
      <!-- ------------------------------------------------------------------------------------------- -->
      <div id="admin" class="tab-pane fade">

        <ul class="list-group">
          <li class="list-group-item">
            <b><a href="@aliveUrl">alive</a></b>
            : Life page test
          </li>
          <li class="list-group-item">
            <b><a href="@sysinfoUrl">sysinfo</a></b>
            : System information
          </li>
          <li class="list-group-item">
            <b><a href="@configUrl">config</a></b>
            : Application configuration
          </li>
        </ul>

      </div>
      <!-- ------------------------------------------------------------------------------------------- -->
  {{/body}}
{{/layout.mustache}}
